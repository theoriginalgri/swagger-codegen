{{>licenseInfo}}
#ifndef _SWG_{{classname}}_H_
#define _SWG_{{classname}}_H_

{{#imports}}{{{import}}}
{{/imports}}
#include "Promise.h"
#include "SwaggerConfig.h"

#include <QObject>
#include <QSharedPointer>
#include <QNetworkReply>

{{#cppNamespaceDeclarations}}
namespace {{this}} {
{{/cppNamespaceDeclarations}}

{{#operations}}
{{#operation}}
struct {{nickname}}Reply
{
    QNetworkReply *httpResponse = nullptr;
    int statusCode = 0;
    bool aborted = false;

{{#responses}}
    {{#dataType}}
    QSharedPointer<{{{dataType}}}> http_{{code}}; // {{{message}}}
    {{/dataType}}
    {{^dataType}}
    bool http_{{code}} = false; // {{{message}}}
    {{/dataType}}
{{/responses}}
};

{{/operation}}
{{/operations}}

class {{classname}} : public QObject
{
    Q_OBJECT

public:
    explicit {{classname}}(QObject *parent = Q_NULLPTR);
    {{classname}}(SwaggerConfig *config, QObject *parent = Q_NULLPTR);
    ~{{classname}}();

    void setConfig(SwaggerConfig *config);
    SwaggerConfig *config() const;

    {{#operations}}{{#operation}}
    /// \fn {{classname}}::{{nickname}}
    /// {{{notes}}}
    {{#allParams}}
    /// \param {{paramName}} {{{description}}}
    {{/allParams}}
    Promise<{{nickname}}Reply> {{nickname}}({{#allParams}}const {{{dataType}}} &{{paramName}}{{#hasMore}}, {{/hasMore}}{{/allParams}});
    {{/operation}}{{/operations}}

private:
    SwaggerConfig *m_config;
};

{{#cppNamespaceDeclarations}}
} // namespace {{this}}
{{/cppNamespaceDeclarations}}

#endif
