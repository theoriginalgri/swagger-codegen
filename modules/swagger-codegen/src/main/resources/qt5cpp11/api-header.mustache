{{>licenseInfo}}
#ifndef _SWG_{{classname}}_H_
#define _SWG_{{classname}}_H_

{{#imports}}{{{import}}}
{{/imports}}

#include <QObject>
#include <QNetworkReply>
#include <QNetworkAccessManager>

namespace Swagger {

class {{classname}} : public QObject
{
    Q_OBJECT
    Q_PROPERTY(QUrl url READ url WRITE setUrl NOTIFY urlChanged)

public:
    {{classname}}(QObject *parent = nullptr);
    {{classname}}(const QUrl &url, QObject *parent = nullptr);
    ~{{classname}}();

    void setUrl(const QUrl &url);
    QUrl url() const;

    void setNetworkAccessManager(QNetworkAccessManager *networkAccessManager);
    QNetworkAccessManager *networkAccessManager();

    // Operations
public slots:
    {{#operations}}{{#operation}}void {{nickname}}({{#allParams}}{{{dataType}}} {{#vendorExtensions.x-codegen-isPointer}}*{{/vendorExtensions.x-codegen-isPointer}}{{paramName}}{{#hasMore}}, {{/hasMore}}{{/allParams}});
    {{/operation}}{{/operations}}
signals:
    {{#operations}}{{#operation}}void {{nickname}}Signal(QNetworkReply::NetworkError error, const QString &errorMessage{{#returnType}}, {{{returnType}}} summary{{/returnType}});
    {{/operation}}{{/operations}}
    void urlChanged(const QUrl &url);

private:
    /*
    {{#operations}}{{#operation}}void {{nickname}}Callback (HttpRequestWorker *worker);
    {{/operation}}{{/operations}}
    */

private:
    QUrl m_url;
    QNetworkAccessManager *m_networkAccessManager;
};

}

#endif
