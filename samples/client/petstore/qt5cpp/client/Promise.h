/**
 * Swagger Petstore
 * This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#ifndef PROMISE_H_
#define PROMISE_H_

#include <QSharedPointer>
#include <QList>
#include <functional>

namespace Swagger {

template <typename... T>
struct PromiseData {
    QList<std::function<void (T...)> > thens;
    QList<std::function<void ()> > errors;

    void resolve(T... args) {
        for(auto fnc : thens) {
            fnc(args...);
        }
    }

    void reject() {
        for(auto fnc : errors) {
            fnc();
        }
    }
};

template <typename... T>
class Promise
{
public:
    Promise() : m_data(new PromiseData<T...>) {
    }

    Promise &then(std::function<void (T...)> fnc) {
        m_data->thens << fnc;

        return *this;
    }

    Promise &then(std::function<void (T...)> fnc, std::function<void ()> errorHandler) {
        m_data->thens << fnc;
        m_data->errors << errorHandler;

        return *this;
    }

    void resolve(T... value) {
        m_data->resolve(value...);
    }

    void reject() {
        m_data->reject();
    }

private:
    QSharedPointer<PromiseData<T...> > m_data;
};

} // namespace Swagger

#endif // PROMISE_H_
