/**
 * Swagger Petstore
 * This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

#ifndef _SWG_SWGPetApi_H_
#define _SWG_SWGPetApi_H_

#include "SWGHttpRequest.h"

#include <QString>
#include "SWGApiResponse.h"
#include "SWGHttpRequest.h"
#include "SWGPet.h"

#include <QObject>

namespace Swagger {

class SWGPetApi : public QObject
{
    Q_OBJECT

public:
    explicit SWGPetApi(QObject *parent = Q_NULLPTR);
    SWGPetApi(const SwaggerConfig &config, QObject *parent = Q_NULLPTR);
    ~SWGPetApi();

    void setConfig(const SwaggerConfig &config);
    SwaggerConfig config() const;

    Promise<> addPet(const SWGPet &body);
    Promise<> deletePet(const qint64 &pet_id, const QString &api_key);
    Promise<QList<SWGPet>> findPetsByStatus(const QList<QString> &status);
    Promise<QList<SWGPet>> findPetsByTags(const QList<QString> &tags);
    Promise<SWGPet> getPetById(const qint64 &pet_id);
    Promise<> updatePet(const SWGPet &body);
    Promise<> updatePetWithForm(const qint64 &pet_id, const QString &name, const QString &status);
    Promise<SWGApiResponse> uploadFile(const qint64 &pet_id, const QString &additional_metadata, const SWGHttpRequestInputFileElement &file);
    

private:
    SwaggerConfig config;
};
}
#endif
