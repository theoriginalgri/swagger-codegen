/**
 * Swagger Petstore
 * This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGPet.h"
#include "SWGPet_p.h"

namespace Swagger {

SWGPet::SWGPet()
: d(new SWGPetData)
{
}

SWGPet::SWGPet(const SWGPet &other)
: d(other.d)
{
}

SWGPet::~SWGPet()
{
}

qint64 SWGPet::id() const
{
    return d->id;
}

void SWGPet::setId(const qint64 &id)
{
    d->id = id;
}

SWGCategory SWGPet::category() const
{
    return d->category;
}

void SWGPet::setCategory(const SWGCategory &category)
{
    d->category = category;
}

QString SWGPet::name() const
{
    return d->name;
}

void SWGPet::setName(const QString &name)
{
    d->name = name;
}

QList<QString> SWGPet::photoUrls() const
{
    return d->photo_urls;
}

void SWGPet::setPhotoUrls(const QList<QString> &photo_urls)
{
    d->photo_urls = photo_urls;
}

QList<SWGTag> SWGPet::tags() const
{
    return d->tags;
}

void SWGPet::setTags(const QList<SWGTag> &tags)
{
    d->tags = tags;
}

QString SWGPet::status() const
{
    return d->status;
}

void SWGPet::setStatus(const QString &status)
{
    d->status = status;
}


} /* namespace Swagger */

