/**
 * Swagger Petstore
 * This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#ifndef SWAGGER_CONFIG_H_
#define SWAGGER_CONFIG_H_

#include <QUrl>
#include <QMap>
#include <QNetworkAccessManager>

namespace Swagger {

class SwaggerConfig : public QObject
{
    Q_OBJECT

public:
    SwaggerConfig(QObject *parent = Q_NULLPTR);
    SwaggerConfig(const QUrl &url, QObject *parent = Q_NULLPTR);
    ~SwaggerConfig();

    void setUrl(const QUrl &url);
    QUrl url() const;

    void setApiKey(const QString& key, const QByteArray &value);
    void removeApiKey(const QString &key);
    QByteArray apiKey(const QString &key) const;

    void setNetworkAccessManager(QNetworkAccessManager *networkAccessManager);
    QNetworkAccessManager *networkAccessManager();

    // Use this method to add additional headers etc. to your requests
    virtual void prepareRequest(QNetworkRequest *request);

    virtual void processReply(QNetworkReply *reply);

private:
    QUrl m_url;
    QMap<QString, QByteArray> m_apiKeys;

    QNetworkAccessManager *m_networkAccessManager = nullptr;
};

} // namespace Swagger

#endif // SWAGGER_CONFIG_H_
