/**
 * Swagger Petstore
 * This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

#ifndef _SWG_SWGUserApi_H_
#define _SWG_SWGUserApi_H_

#include "SWGHttpRequest.h"

#include <QList>
#include <QString>
#include "SWGUser.h"

#include <QObject>

namespace Swagger {

class SWGUserApi : public QObject
{
    Q_OBJECT

public:
    explicit SWGUserApi(QObject *parent = Q_NULLPTR);
    SWGUserApi(const SwaggerConfig &config, QObject *parent = Q_NULLPTR);
    ~SWGUserApi();

    void setConfig(const SwaggerConfig &config);
    SwaggerConfig config() const;

    Promise<> createUser(const SWGUser &body);
    Promise<> createUsersWithArrayInput(const QList<SWGUser> &body);
    Promise<> createUsersWithListInput(const QList<SWGUser> &body);
    Promise<> deleteUser(const QString &username);
    Promise<SWGUser> getUserByName(const QString &username);
    Promise<QString> loginUser(const QString &username, const QString &password);
    Promise<> logoutUser();
    Promise<> updateUser(const QString &username, const SWGUser &body);
    

private:
    SwaggerConfig config;
};
}
#endif
