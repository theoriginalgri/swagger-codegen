/**
 * Swagger Petstore
 * This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGTag.h"
#include "SWGTag_p.h"

namespace Swagger {

SWGTag::SWGTag()
: d(new SWGTagData)
{
}

SWGTag::SWGTag(const SWGTag &other)
: d(other.d)
{
}

SWGTag::~SWGTag()
{
}

SWGTag &SWGTag::operator =(const SWGTag &other)
{
    d = other.d;
    return *this;
}

bool SWGTag::operator ==(const SWGTag &cmp) const
{
    if (d == cmp.d) {
        return true;
    }

    return (
        d->id == cmp.d->id &&
        d->name == cmp.d->name
    );
}

qint64 SWGTag::id() const
{
    return d->id;
}

void SWGTag::setId(const qint64 &id)
{
    d->id = id;
}

QString SWGTag::name() const
{
    return d->name;
}

void SWGTag::setName(const QString &name)
{
    d->name = name;
}

QDebug operator <<(QDebug stream, const SWGTag &obj)
{
    QDebugStateSaver saver(stream);
    stream.nospace()
        << "id: " << obj.id() << ", "
        << "name: " << obj.name();

    return stream;
}

} // namespace Swagger

