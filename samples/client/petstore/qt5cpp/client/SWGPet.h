/**
 * Swagger Petstore
 * This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * SWGPet.h
 * 
 * A pet for sale in the pet store
 */

#ifndef SWGPet_H_
#define SWGPet_H_

#include "SwaggerConfig.h"

#include "SWGCategory.h"
#include "SWGTag.h"
#include <QList>
#include <QString>
#include <QSharedDataPointer>


namespace Swagger {

class SWGPetData;

class SWGPet {
    Q_GADGET
    Q_PROPERTY(qint64 id READ id)
    Q_PROPERTY(SWGCategory category READ category)
    Q_PROPERTY(QString name READ name)
    Q_PROPERTY(QList<QString> photo_urls READ photoUrls)
    Q_PROPERTY(QList<SWGTag> tags READ tags)
    Q_PROPERTY(QString status READ status)
public:
    SWGPet();
    SWGPet(const SWGPet &other);
    ~SWGPet();

    SWGPet &operator =(const SWGPet &other);

    qint64 id() const;
    void setId(const qint64 &id);

    SWGCategory category() const;
    void setCategory(const SWGCategory &category);

    QString name() const;
    void setName(const QString &name);

    QList<QString> photoUrls() const;
    void setPhotoUrls(const QList<QString> &photo_urls);

    QList<SWGTag> tags() const;
    void setTags(const QList<SWGTag> &tags);

    QString status() const;
    void setStatus(const QString &status);

private:
    QSharedDataPointer<SWGPetData> d;
};

}

Q_DECLARE_TYPEINFO(Swagger::SWGPet, Q_MOVABLE_TYPE);
Q_DECLARE_METATYPE(Swagger::SWGPet)

#endif /* SWGPet_H_ */
